---
description: MJML Block Partial Structure Rules
globs: .mjml
alwaysApply: false
---
# MJML Block Partial Structure Rules

## 1. Basic Container Structure
- Always start with an HTML comment describing the block's purpose
- Use `<mj-section>` as the root container with `padding="0"` or `padding="20px"`
- Add appropriate CSS classes for styling and responsiveness:
  ```mjml
  css-class="block-container light-section"
  ```
- First child of `mj-section` should be `mj-column` with these standard characteristics:
  ```mjml
  <mj-column 
    width="100%" 
    padding="0"
    vertical-align="top">
    <!-- Content or nested sections go here -->
  </mj-column>
  ```
- Optional section modifiers: `blue-border`, `gradient-bg`

## 2. Column Layout Patterns

### Single Column Container
```mjml
<mj-section padding="0" css-class="block-container light-section">
  <mj-column width="100%" padding="0">
    <!-- Content sections or components -->
    <mj-section padding="20px">
      <mj-column width="100%">
        <!-- Content components -->
      </mj-column>
    </mj-section>
  </mj-column>
</mj-section>
```

### Two Columns (Side by Side)
```mjml
<mj-section padding="20px" css-class="block-container light-section">
  <!-- Left Column -->
  <mj-column
    width="45%"
    padding="20px"
    vertical-align="top"
    css-class="mobile-stack-column">
    <mj-include path="../components/component-image-content-left.mjml" />
  </mj-column>

  <!-- Right Column -->
  <mj-column
    width="55%"
    padding="20px"
    vertical-align="top"
    css-class="mobile-stack-column">
    <!-- Content components -->
  </mj-column>
</mj-section>
```

### Nested Sections (Complex Layouts)
```mjml
<mj-section padding="0" css-class="block-container light-section">
  <mj-column width="100%" padding="0">
    <!-- Header Section -->
    <mj-wrapper padding="0" css-class="gradient-bg">
      <mj-section padding="0">
        <!-- Nested columns here -->
      </mj-section>
    </mj-wrapper>
    
    <!-- Content Section -->
    <mj-section padding="20px">
      <!-- Content columns here -->
    </mj-section>
  </mj-column>
</mj-section>
```

## 4. Special Sections

### Gradient Headers
```mjml
<mj-wrapper padding="0" css-class="gradient-bg mobile-stack">
  <!--[if gte mso 9]>
    <v:background xmlns:v="urn:schemas-microsoft-com:vml" fill="t">
      <v:fill
        type="gradient"
        color="#013c65"
        color2="#007dba"
        method="linear"
        angle="180" />
    </v:background>
  <![endif]-->
  <!-- Content -->
</mj-wrapper>
```

## 5. Mobile Responsiveness
Required classes:
- `mobile-stack-column`: For columns that should stack on mobile
- `mobile-center`: For content that should center align on mobile
- `mobile-stack`: For sections that need special mobile stacking behavior

## 6. Background Colors & Themes
- Default (White): `light-section`
- Blue Border: Add `blue-border` class
- Gradient: Use `gradient-bg` class with Outlook VML fallback
- Gold: Add `gold-section` class

## 7. File Naming Convention
- Prefix: Always use `block-`
- Pattern: `block-[type]-[variant].mjml`
Examples:
- `block-body-content-white.mjml`
- `block-two-column-hero.mjml`
- `block-events.mjml`

## 8. Component Integration
- Components are stored in `../components/`
- Use semantic naming: `component-[element-type]-[variant].mjml`
- Common components:
  - `component-h1.mjml`
  - `component-h2.mjml`
  - `component-text.mjml`
  - `component-button-blue-left.mjml`
  - `component-image-hero-half-width.mjml`
  - `component-image-content-left.mjml`

## 9. Best Practices
- Use components for reusable elements
- Maintain consistent padding (0px or 20px)
- Always include mobile responsiveness classes
- Use semantic class names
- Include descriptive HTML comments
- Provide Outlook fallbacks for advanced styling 

### Gradient Headers
```mjml
<mj-wrapper padding="0" css-class="gradient-bg mobile-stack">
  <!--[if gte mso 9]>
    <v:background xmlns:v="urn:schemas-microsoft-com:vml" fill="t">
      <v:fill
        type="gradient"
        color="#013c65"
        color2="#007dba"
        method="linear"
        angle="180" />
    </v:background>
  <![endif]-->
  <!-- Content -->
</mj-wrapper>
```

## 5. Mobile Responsiveness
Required classes:
- `mobile-stack-column`: For columns that should stack on mobile
- `mobile-center`: For content that should center align on mobile
- `mobile-stack`: For sections that need special mobile stacking behavior

## 6. Background Colors & Themes
- Default (White): `light-section`
- Blue Border: Add `blue-border` class
- Gradient: Use `gradient-bg` class with Outlook VML fallback
- Gold: Add `gold-section` class

## 7. File Naming Convention
- Prefix: Always use `block-`
- Pattern: `block-[type]-[variant].mjml`
Examples:
- `block-body-content-white.mjml`
- `block-two-column-hero.mjml`
- `block-events.mjml`

## 8. Component Integration
- Components are stored in `../components/`
- Use semantic naming: `component-[element-type]-[variant].mjml`
- Common components:
  - `component-h1.mjml`
  - `component-h2.mjml`
  - `component-text.mjml`
  - `component-button-blue-left.mjml`
  - `component-image-hero-half-width.mjml`
  - `component-image-content-left.mjml`

## 9. Best Practices
- Use components for reusable elements
- Maintain consistent padding (0px or 20px)
- Always include mobile responsiveness classes
- Use semantic class names
- Include descriptive HTML comments
- Provide Outlook fallbacks for advanced styling